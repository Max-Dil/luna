6.8.1
Пофикшено что app.get_clients возрашал не всех

6.8
Микрооптимизации модуля security
Lunac клиент HTTP/HTTPS теперь правильно возращает ответ

6.7
Исправлен баг что клиент не отключался если нету слушателя отключения в Luna приложениях

6.6
Микро оптимизации luna и lunac

6.5
Улучшены HTTP сервера - добавили отладку новых кодов и mime types для звуков
В HTTP apps добавлены новые константы - app.STATUS_CODES, app.MIME_TYPES

Lunac:
Добавлены веб сокет прлиожения (веб сокет клиент)
lunac.connect_to_web_app(config)
config:
str name
str url
boolean debug
func error_handler(error_message)
boolean no_errors
str protocol
tbl ssl
func on_connect(self)
func on_message(self, message, opcode)
func on_close(self, code, reason)
self это сам app_data

lunac.disconnect_to_web_app(app_data_or_name)

API web app_data:
app:send(data, opcode) -- отправить сообщение серверу
app.opcodes = {
    CLOSE = 8,
    TEXT = 1,
    BINARY = 2,
    PING = 9,
    PONG = 10,
    CONTINUATION = 0,
} -- встроенные опкоды

6.4
Собраны файлы luna.lua, lunac.lua

6.3
Lunac:
Добавлены HTTP/HTTPS запросы
lunaс.http:
lunac.http.init(config) -- {luna = luna, lunac = lunac} luna если ваш сервер в одном и том же месте что и клиент (для fetch), lunac если вы хотите чтобы он работал паралельно при fetch
lunac.http.noawait_fetch(url, options, callback) -- асинхронный запрос callback(result, code, headers, status).
local result, code, headers, status = lunac.http.fetch(url, {}) -- синхронный запрос

6.2:
Lunac:
Добавлена обработки ошибки инициализации клиента, для разделения на модули
Новая функция lunac.close() для закрытия всех приложений

Luna:
Добавлен параметр ssl в config Web apps
Новый параметр у client - raw_socket (исходный сокет обычный могут ssl обернуть)
Пофикшена обработка ошибок
Исправлен wss протокол

Исправлено закрытие HTTP приложений
Исправлен HTTPS протокол
Новый параметр у client_data - raw_socket (исходный сокет обычный могут ssl обернуть)
Новый параметр у request - client_data